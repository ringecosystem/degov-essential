<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Twitter Account Authorization Settings</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      font-family: 'Segoe UI', Arial, sans-serif;
      background: linear-gradient(135deg, #1da1f2 0%, #e8f5fd 100%);
      color: #222;
      margin: 0;
      padding: 0;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .container {
      background: #fff;
      border-radius: 18px;
      box-shadow: 0 4px 24px rgba(29, 161, 242, 0.10);
      padding: 2.5rem 2.5rem 2rem 2.5rem;
      max-width: 400px;
      width: 100%;
      margin: 2rem;
      animation: pop 0.7s cubic-bezier(.68, -0.55, .27, 1.55);
    }

    .box-form {
      text-align: center;
    }

    @keyframes pop {
      0% {
        transform: scale(0.7);
      }

      80% {
        transform: scale(1.05);
      }

      100% {
        transform: scale(1);
      }
    }

    .x-logo {
      width: 48px;
      height: 48px;
      margin-bottom: 1rem;
      animation: fly 2s infinite alternate;
      display: inline-block;
    }

    @keyframes fly {
      0% {
        transform: translateY(0);
      }

      100% {
        transform: translateY(-8px);
      }
    }

    h2 {
      color: #1da1f2;
      margin-bottom: 0.5rem;
      letter-spacing: 1px;
    }

    .form-title {
      font-size: 1.15em;
      color: #555;
      margin-bottom: 1.5rem;
      font-weight: 500;
    }

    form {
      margin-top: 1rem;
      text-align: left;
    }

    .form-group {
      margin-bottom: 1.2rem;
    }

    label {
      display: block;
      margin-bottom: 0.4em;
      color: #1da1f2;
      font-weight: 500;
    }

    input[type="text"] {
      width: 100%;
      padding: 0.7em;
      border: 1.5px solid #e1e8ed;
      border-radius: 8px;
      font-size: 1rem;
      background: #f7fafd;
      transition: border 0.2s;
    }

    input[type="text"]:focus {
      border-color: #1da1f2;
      outline: none;
    }

    .btn-group {
      display: flex;
      justify-content: flex-end;
      margin-top: 1.5rem;
    }

    button {
      padding: 0.7em 2em;
      border: none;
      border-radius: 999px;
      font-size: 1rem;
      font-weight: bold;
      cursor: pointer;
      transition: background 0.2s, color 0.2s;
    }

    .btn-reset {
      background: #e8f5fd;
      color: #1da1f2;
      margin-right: 1rem;
    }

    .btn-reset:hover {
      background: #b2e0fb;
    }

    .btn-submit {
      background: #1da1f2;
      color: #fff;
    }

    .btn-submit:hover {
      background: #0d8ddb;
    }

    .profile-tip {
      font-size: 0.95em;
      color: #888;
      margin-bottom: 1.2rem;
      text-align: left;
    }

    .degov-link,
    a.degov-link {
      color: #1da1f2;
      text-decoration: none;
      font-weight: bold;
      transition: color 0.2s, text-decoration 0.2s;
    }

    .degov-link:hover,
    a.degov-link:hover {
      color: #e0245e;
      text-decoration: underline;
    }
  </style>
  <script>
    window.onload = function () {
      document.getElementById('form-api').onsubmit = handleSubmit;
    }
    function resetForm(formId) {
      document.getElementById(formId).reset();
      document.getElementById('result-message').innerText = '';
    }

    async function handleSubmit(e) {
      e.preventDefault();
      const form = e.target;
      const data = {
        method: 'api',
        profile: form.profile.value
      };
      try {
        const resp = await fetch('/twitter/authorize', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data),
        });
        const result = await resp.json();
        if (result.code != 0) {
          const message = result.message || 'Authorization failed';
          document.getElementById('result-message').innerText = message;
          return;
        }

        if (
          result.data &&
          result.data.oauthUrl
        ) {
          let seconds = 3;
          const url = result.data.oauthUrl;
          document.getElementById('result-message').innerText =
            `Authorization successful!\nRedirecting to Twitter authentication in ${seconds} seconds...`;

          const timer = setInterval(() => {
            seconds--;
            if (seconds > 0) {
              document.getElementById('result-message').innerText =
                `Authorization successful!\nRedirecting to Twitter authentication in ${seconds} seconds...`;
            } else {
              clearInterval(timer);
              document.getElementById('result-message').innerHTML =
                `Redirecting now... <a href="${url}" target="_blank" style="color:#1da1f2;word-break:break-all;">${url}</a>`;
              window.location.href = url;
            }
          }, 1000);
          return;
        }

        document.getElementById('result-message').innerText =
          JSON.stringify(result.data.message, null, 2);
      } catch (err) {
        document.getElementById('result-message').innerText =
          'Request failed: ' + err;
      }
    }
  </script>
</head>

<body>
  <div class="container">
    <div class="box-form">
      <svg class="x-logo" viewBox="0 0 24 24" aria-hidden="true">
        <g>
          <path
            d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z">
          </path>
        </g>
      </svg>
      <h2>X Authorization</h2>
      <div class="form-title">
        Connect your Twitter account to
        <a href="https://degov.ai" class="degov-link">DeGov.AI</a>
      </div>
      <form id="form-api" autocomplete="off">
        <div class="form-group">
          <label for="api-profile">Profile <span style="color:#e0245e">*</span></label>
          <input type="text" id="api-profile" name="profile" required placeholder="Enter profile name" value="default">
        </div>
        <div class="btn-group">
          <button type="reset" class="btn-reset" onclick="resetForm('form-api')">Reset</button>
          <button type="submit" class="btn-submit">Submit</button>
        </div>
      </form>
    </div>
    <div id="result-message" style="margin-top:1.5rem; color:#1da1f2; white-space:pre-wrap; font-size:1em;"></div>
  </div>
</body>

</html>
